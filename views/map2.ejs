<!DOCTYPE html>
<div class="div">
<html>
<head>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <script src="https://kit.fontawesome.com/3d39a7913e.js" crossorigin="anonymous"></script>
    <script src="d.js"></script>
    <title>Madurai Ancient Temples Map (OSM)</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine/dist/leaflet-routing-machine.css" /> <!-- Add this line -->
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet-routing-machine/dist/leaflet-routing-machine.js"></script>
    <script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>
    <body>
        <div id="google_translate_element"></div>
        <style>
            /* Hide the Google Translate container initially */
            #google_translate_element {
                display: none;
            }
        </style>
        <script type="text/javascript">
            function googleTranslateElementInit() {
                new google.translate.TranslateElement({
                    pageLanguage: 'en',
                    autoDisplay: false
                }, 'google_translate_element');
    
                // Hide the translation toolbar after it's loaded
                setTimeout(function() {
                    const iframe = document.querySelector('iframe.skiptranslate');
                    if (iframe) {
                        iframe.style.display = 'none';
                    }
                }, 1000); // Delay to ensure the iframe is loaded
            }
        </script>
        <script type="text/javascript" src="https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
    </body>
    <style>
        #map { height: 500px; width: 100%; }
        .leaflet-routing-container {
            background: white;
            padding: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            max-width: 300px;
        }
        .close-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background: red;
            color: white;
            border: none;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            cursor: pointer;
        }
        h2{
            text-align: center;
        }
    </style>
</head>
<body>
    <h2>TEMPLES IN MADURAI</h2>
    <div id="map"></div>
    <button class="but" ><a style="text-decoration: none;color:rgb(200, 225, 219); " href="sample.html">Rating&#9733&#9733&#9733;</a></button>
    <div class="image">
        <img class="om" src="om.png" height="30px" width="30px">
        <h4>popular</h4>
        <img class="temple" src="temple.png" height="30px" width="30px">
        <h4>unpopular</h4>
        </div>
    <script>
        var map = L.map('map').setView([9.9252, 78.1198], 12); // Centered on Madurai

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; OpenStreetMap contributors'
        }).addTo(map);

        var temples = [
            {name:"Arulmigu Sri Muktheeswarar Temple vaayu sthalam",lat:9.93053066524309,lng: 78.14734787563715},
            {name:"Arulmigu Immaiyilum Nanmai Tharuvar Temple",lat:9.928501585319738,lng:78.11644882942547},
            {name:"Meenakshi Amman Temple",lat:9.92782522255002,lng:78.11782212036822},
            {name:"Arulmigu Koodal Azhagar Temple",lat:9.935265136135333, lng:78.11644882942547},
            {name:"Sri Alagar Temple",lat:9.93797051730907,lng:78.11644882942547},
            {name:"Shri Navaneetha Krishnasamy Temple",lat:9.934588787345463,lng:78.11507553848273},
            {name:"Arulmigu Park Sri Murugan Temple",lat:9.944733872310916,lng:78.13842148450934},
            {name:"Sri Aathi Sokkanaathar Meenakshi Amman Temple",lat:9.934588787345463, lng:78.12331528413917},
            {name:"Arulmigu Sri Madana Gopala Swamy Temple",lat:9.92985430666636, lng:78.11438889301137},
            {name:"Madurai Meenakshi Amman Temple, East Tower",lat:9.92647249281822,lng:78.11644882942547},
            {name:"West Tower, Arulmigu Sri Meenakshi Amman Temple",lat:9.92647249281822, lng:78.11782212036822},
            {name:"Meenakshi Sundareshwarar Temple",lat:9.995454566764352, lng:78.14391464828029},
            {name:"Maariamman Kovil Theppakulam -Madurai",lat:9.927148858382806, lng:78.14460129375166},
            {name:"Ahimsapuram",lat:9.952173401136502, lng:78.11988205678232},
            {name:"Arulmigu Sri Thiruvapudaiyar Temple",lat:9.945410200113908, lng:78.11713547489683},
            {name:"Arulmigu Sri Pandi Muneeswaran Temple",lat:9.950820772135222, lng:78.16314072147867},
            {name:"Arulmigu Sri Chellathamman Temple",lat:9.92487065325176, lng:78.11932999904342},
            {name:"Arulmigu Shri Draupadi Amman Temple",lat:9.91239985189623, lng:78.12199075024498},
            {name:"Sri Veeraraghava Perumal temple",lat:9.914682678137916, lng:78.11778504673283},
            {name:"Arulmigu Yoga Narasinga Perumal Thiru Kovil",lat:9.967575757192815, lng:78.18891126835946},
            {name:"Sri Pookuzhi Sakthi Muthulakshmi Amman Temple, Suyambu Amma Mitto",lat:9.923933222159784, lng:78.10793046835948},
            {name:"Arulmigu puttu chockanathar temple",lat:9.932810477850019, lng:78.11076288092889},
            {name:"Arulmigu Kallazhagar Sundaraja Perumal Temple",lat:10.075671543987484, lng:78.21314072972733},
            {name:"Shri Madurai Veeran Swamy Temple",lat:9.920148643124918, lng:78.1189991763077},
            {name:"Thousand Pillars",lat:9.921501398978958, lng:78.11994331383083},
            {name:"Arulmigu Sri Thenthiruvalavai Swamy Koil Sivan Temple",lat:9.917908128954943, lng:78.12230365763867},
            {name:"Arulmigu Sri Prasanna Venkatesa Perumal Temple",lat:9.91528713067245, lng:78.11676757852574},
            {name:"Muthapa Narayaswamy Temple",lat:9.96508089708774, lng:78.15915487575319},
            {name:"Arulmigu Murukan Swami Temple,",lat:9.880585690179965, lng:78.07076480699168},
            {name:"Thirumogoor Shri Kalameghaperumal Temple - Madurai",lat:9.951624159017177, lng:78.20679999164967},
            {name:"Arulmigu Kalyanasundareswarar Temple",lat:9.88357785166474, lng:78.11205550699164},
            {name:"Arulmigu Sri Murugan Temple",lat:9.91799286967173, lng:78.11559738370144},
            {name:"Arulmigu Jagamuneeswarar Temple",lat:9.918373335323638, lng:78.11542572233355},
            {name:"Samanar Hill, Keelakuyilkudi",lat:9.92301863111536, lng:78.04912204506931},
            {name:"Shivan Temple",lat:9.94432508461607, lng:78.09785749164968},
            
        ];

        var userMarker, routeControl, nearestTempleMarker;
        var userLocation = null;
        var blinkInterval = null;

        

        var templeBlinkIcon = L.icon({
            iconUrl: 'https://leafletjs.com/examples/custom-icons/red-marker-icon.png', 
            iconSize: [30, 30],
            iconAnchor: [15, 30]
        });

        var userIcon = L.icon({
            iconUrl: 'location-crosshairs-solid.svg',
            iconSize: [30, 30],
            iconAnchor: [15, 30]
        });
        var popularTempleIcon = L.icon({
            iconUrl: 'om.png', // First image for popular temples
            iconSize: [30, 30],
            iconAnchor: [15, 30]
        });

        var unpopularTempleIcon = L.icon({
            iconUrl: 'temple.png', // Second image for less popular temples
            iconSize: [30, 30],
            iconAnchor: [15, 30]
        });

        var popularTemples = [
            "Meenakshi Amman Temple",
            "Arulmigu Koodal Azhagar Temple",
            "Sri Alagar Temple",
            "Thirumogoor Shri Kalameghaperumal Temple - Madurai",
            "Arulmigu Kallazhagar Sundaraja Perumal Temple",
            "Arulmigu Immaiyilum Nanmai Tharuvar Temple",
            "Arulmigu Sri Pandi Muneeswaran Temple",
            "Arulmigu Sri Muktheeswarar Temple vaayu sthalam",
            "Sri Aathi Sokkanaathar Meenakshi Amman Temple",
            "Arulmigu Sri Prasanna Venkatesa Perumal Temple",
            "Arulmigu Sri Thiruvapudaiyar Temple",
            "Maariamman Kovil Theppakulam -Madurai",
            "Meenakshi Sundareshwarar Temple",
        ];

        temples.forEach(temple => {
            let iconType = popularTemples.includes(temple.name) ? popularTempleIcon : unpopularTempleIcon;

            temple.marker = L.marker([temple.lat, temple.lng], { icon: iconType })
                .addTo(map)
                .bindPopup(`<b>${temple.name}</b><br>Distance: ${temple.distance} km<br>
                    <button onclick="getDirections(${temple.lat}, ${temple.lng})">Get Directions</button>`) // Tooltip on hover
                .bindTooltip(temple.name, { permanent: false, direction: "top" });
        });


        function getUserLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    userLocation = [position.coords.latitude, position.coords.longitude];

                    if (userMarker) {
                        userMarker.setLatLng(userLocation);
                    } else {
                        userMarker = L.marker(userLocation, { icon: userIcon })
                            .addTo(map)
                            .bindPopup("<b>You are here</b>")
                            .openPopup();
                    }

                    map.setView(userLocation, 14);
                    updateTempleDistances();
                }, function() {
                    alert("Please allow location access to get directions.");
                });
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        }

        function getDistance(lat1, lon1, lat2, lon2) {
            var R = 6371;
            var dLat = (lat2 - lat1) * (Math.PI / 180);
            var dLon = (lon2 - lon1) * (Math.PI / 180);
            var a = 
                Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                Math.cos(lat1 * (Math.PI / 180)) * Math.cos(lat2 * (Math.PI / 180)) * 
                Math.sin(dLon / 2) * Math.sin(dLon / 2);
            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
            return (R * c).toFixed(2);
        }

        function updateTempleDistances() {
    if (!userLocation) return;

    temples.forEach(temple => {
        temple.distance = getDistance(userLocation[0], userLocation[1], temple.lat, temple.lng);
    });

    temples.sort((a, b) => a.distance - b.distance);
    
    displayTemples(); // Now call displayTemples after distances are updated
}


function displayTemples() {
    temples.forEach((temple) => {
        let iconType = popularTemples.includes(temple.name) ? popularTempleIcon : unpopularTempleIcon;

        temple.marker = L.marker([temple.lat, temple.lng], { icon: iconType })
            .addTo(map)
            .bindPopup(`<b>${temple.name}</b><br>Distance: ${temple.distance} km<br>
                <button onclick="getDirections(${temple.lat}, ${temple.lng})">Get Directions</button>`)
            .bindTooltip(temple.name, { permanent: false, direction: "top" });
    });

    let nearestTemple = temples[0]; // Get the nearest temple
    blinkNearestTemple(nearestTemple);
}

        function blinkNearestTemple(nearestTemple) {
            if (blinkInterval) {
                clearInterval(blinkInterval);
                if (nearestTempleMarker) {
                    nearestTempleMarker.setIcon(templeIcon);
                }
            }

            nearestTempleMarker = nearestTemple.marker;
            let isOriginalIcon = true;

            blinkInterval = setInterval(() => {
                nearestTempleMarker.setIcon(isOriginalIcon ? templeBlinkIcon : templeIcon);
                isOriginalIcon = !isOriginalIcon;
            }, 500);
        }

        function getDirections(destLat, destLng) {
            if (!userLocation) {
                alert("Please allow location access first.");
                getUserLocation();
                return;
            }

            if (routeControl) {
                map.removeControl(routeControl);
            }

            routeControl = L.Routing.control({
                waypoints: [
                    L.latLng(userLocation[0], userLocation[1]), 
                    L.latLng(destLat, destLng) 
                ],
                routeWhileDragging: true,
                lineOptions: {
                    styles: [{ color: 'green', opacity: 0.7, weight: 5 }] 
                },
                createMarker: function(i, waypoint, n) {
                    return L.marker(waypoint.latLng, {
                        icon: L.icon({
                            iconUrl: (i === 0) ? 'location-crosshairs-solid.svg' : 
                                'https://leafletjs.com/examples/custom-icons/red-marker-icon.png',
                            iconSize: [30, 30],
                            iconAnchor: [15, 30]
                        })
                    });
                },
                router: L.Routing.osrmv1({
                    serviceUrl: 'https://router.project-osrm.org/route/v1'
                }),
                show: true // Ensure the route panel is visible
            }).addTo(map);

            // Add a close button to the route panel
            const routeContainer = document.querySelector('.leaflet-routing-container');
            if (routeContainer) {
                const closeBtn = document.createElement('button');
                closeBtn.className = 'close-btn';
                closeBtn.innerHTML = '×';
                closeBtn.onclick = () => {
                    map.removeControl(routeControl);
                    routeControl = null;
                };
                routeContainer.appendChild(closeBtn);
            }
        }

        getUserLocation();
        setTimeout(updateTempleDistances, 2000);
    </script>
    <style>
        .leaflet-routing-alt {
            display: block !important; /* Ensure the route panel is visible */
        }
    </style>
    
</body>
</html>
</div>
<style>
    
    .but {
        position: absolute;
        top: 2%;
        right: 3%;
        width: 100px;
        height: 35px;
        color: rgb(200, 225, 219);
        background-color: #27285C;
        font-weight: bold;
    }
    .image{
        display:flex;
        position: absolute;
        top:3%;
        right:15%;
        
    }
    *{
        font-family: "Roboto",sans-serif;
    }
</style>
